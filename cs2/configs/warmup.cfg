
echoln "                                                                                                          "
echoln " +--------------------+   "
echoln " | Loading warmup.cfg |   "
echoln " +--------------------+   "
echoln "                                                                                                          "

sv_tags "hidden";                                   // Server tags. Used to provide extra information to clients when they're browsing for servers. Separate tags with a comma.
sv_cheats "1";                                      // Allow cheats on server
sv_visiblemaxplayers "0";                           // Overrides the max players reported to prospective clients

hostname "Darkharden Private Warmup Server";        // Hostname for server.
motdfile "motd.txt";                                // The MOTD file to load.

// exec "./server_secrets.cfg";
tv_advertise_watchable "0";                         // GOTV advertises the match as watchable via game UI, clients watching via UI will not need to type password
hostname_in_client_status "0";                      // Show server hostname in client status.
rcon_connected_clients_allow "0";                   // Allow clients to use rcon commands on server.

sv_record_item_time_data "1";                       // Turn on recording of per player item time data into the server log.
sv_log_onefile "1";                                 // Log server information to only one file.
sv_logflush "0";                                    // Flush the log file to disk on each write (slow).
sv_logfile "1";                                     // Log server information in the log file.
sv_logbans "1";                                     // Log server bans in the server logs.
sv_logecho "1";                                     // Echo log information to the console.
sv_logsdir "logs";                                  // Folder in the game directory where server logs will be stored.
developer "2147483647";                             // Set developer message level. ( See https://developer.valvesoftware.com/wiki/Developer )
con_enable "1";                                     // Allows the console to be activated.
mp_logdetail_items "1";                             // Logs a line any time a player acquires or loses an item.
mp_logmoney "1";                                    // Enables money logging. Values are: 0=off, 1=on
mp_logdetail "0";                                   // Logs attacks. Values are: 0=off, 1=enemy, 2=teammate, 3=both)

sv_competitive_minspec "1";                         // Enable to force certain client convars to minimum/maximum values to help prevent competitive advantages.
sv_skirmish_id "0";                                 // Dedicated server skirmish id to run
game_type "0";                                      // The current game type. See GameModes.txt.
game_mode "1";                                      // The current game mode (based on game type). See GameModes.txt.
game_alias "competitive";                           // Set the configuration of game type and mode based on game alias like "deathmatch".

sv_ignoregrenaderadio "1";

bot_allow_sub_machine_guns "1";                     // If nonzero, bots may use sub-machine guns.
bot_allow_machine_guns "1";                         // If nonzero, bots may use the machine gun.
bot_allow_shotguns "1";                             // If nonzero, bots may use shotguns.
bot_allow_grenades "1";                             // If nonzero, bots may use grenades.
bot_allow_pistols "1";                              // If nonzero, bots may use pistols.
bot_allow_snipers "1";                              // If nonzero, bots may use sniper rifles.
bot_allow_rifles "1";                               // If nonzero, bots may use rifles.
bot_allow_rogues "1";                               // If nonzero, bots may occasionally go 'rogue'. Rogue bots do not obey radio commands,
bot_chatter "normal";                                  // Control how bots talk. Allowed values: 'off', 'radio', 'minimal', or 'normal'.
bot_quota "10";                                     // Determines the total number of bots in the game.
// bot_kick "all";                                  // Kicks a specific bot, or all bots, matching the given criteria. <all> <t|ct> <type>
bot_stop "0";                                       // Turns off all bot AI <1|all> | <not_bomber> | <t> | <ct>
bot_zombie "0";                                     // If nonzero, bots will stay in idle mode and not attack.
bot_dont_shoot "0";                                 // If nonzero, bots will not fire weapons (for debugging).
bot_quota_mode "fill";                              // Determines the type of quota. Allowed values: 'normal', 'fill', and 'match'. If 'fil
bot_ignore_enemies "0";                             // If nonzero, bots will ignore enemies (for debugging).
bot_ignore_players "0";                             // Bots will not see non-bot players.

bot_difficulty "4"
bot_autodifficulty_threshold_high "5"
bot_autodifficulty_threshold_low "-5"
custom_bot_difficulty "4"

mp_suicide_penalty "0";                             // Punish players for suicides
mp_autokick "0";                                    // Kick idle/team-killing/team-damaging players
mp_tkpunish "0";                                    // Will TK'ers and team damagers be punished in the next round?  {0=no,  1=yes}

sv_disable_observer_interpolation "1";              // Disallow interpolating between observer targets on this server.
sv_radio_throttle_window "0";                       // The number of seconds before radio command tokens refresh.
player_ping_token_cooldown "0";                     // Cooldown for how long it takes for a player's ping token to refresh allowing them to ping again (they get 5 tokens).
mp_overtime_enable "1";                             // If a match ends in a tie, use overtime rules to determine winner
mp_team_timeout_time "0";                           // Duration of each timeout.
mp_team_timeout_max "0";                            // Number of timeouts each team gets per match.
sv_party_mode "1";                                  // Party!!
sv_showimpacts "0";                                 // Shows client (red) and server (blue) bullet impact point (1=both, 2=client-only, 3=server-only)
sv_showimpacts_time "0";                            // Show the impact times for the set number of seconds
sv_matchend_drops_enabled "1";                      // Rewards gameplay time is always accumulated for players, but drops at the end of the match can be prevented
sv_usercmd_custom_random_seed "0";                  // When enabled server will populate an additional random seed independent of the client
sv_grenade_trajectory_prac_trailtime "20";          // Sets the time trajectories
sv_grenade_trajectory_prac_pipreview "1";           // Shows the trajectory of thrown grenades with a line that draws where the grenade went

sv_auto_full_alltalk_during_warmup_half_end "1";    // When enabled will automatically turn on full all talk mode in warmup, at halftime and at the end of the match
sv_show_voip_indicator_for_enemies "1";             // Makes it so the voip icon is shown over enemies as well as allies when they are talking
sv_talk_after_dying_time "inf";                     // The number of seconds a player can continue talking after dying as if they were still alive
sv_talk_enemy_living "1";                           // Living players can hear all living enemy communication (voice, chat)
sv_talk_enemy_dead "1";                             // Dead players can hear all dead enemy communication (voice, chat)
sv_full_alltalk "1";                                // Any player (including Spectator team) can speak to any other player
sv_deadtalk "1";                                    // Dead players can speak (voice, text) to the living
sv_alltalk "1";                                     // Players can hear all other players' voice communication, no team restrictions
mp_forcecamera "0";                                 // Restricts spectator modes for dead players

mp_respawn_immunitytime "-1";                       // How many seconds after respawn immunity lasts. Set to negative value to sound_disable warmup immunity.
mp_randomspawn_los "1";                             // If using mp_randomspawn, determines whether to test Line of Sight when spawning.
mp_randomspawn_dist "1";                            // If using mp_randomspawn, determines whether to test distance when selecting this spot.
mp_randomspawn "1";                                 // Determines whether players are to spawn. 0 = default; 1 = both teams; 2 = Terrorists; 3 = CTs.

sv_vote_to_changelevel_before_match_point "1";      // Restricts vote to change level to rounds prior to match point (default 0, vote is never disallowed) // THIS IS TEMPORARY UNTIL I CAN FIX MAP GROUPS
sv_vote_issue_loadbackup_spec_only "1";             // When enabled, only admins load match from backup
sv_vote_issue_loadbackup_allowed "0";               // Can people hold votes to load match from backup?
sv_workshop_allow_other_maps "0";                   // When hosting a workshop collection, users can play other workshop map on this server when it is empty and then mapcycle into this server collection.
sv_vote_issue_kick_allowed "0";                     // Can people hold votes to kick players from the server?
sv_vote_allow_spectators "1";                       // Allow spectators to initiate votes?
sv_vote_allow_in_warmup "1";                        // Allow voting during warmup?
sv_vote_command_delay "0";                          // How long after a vote passes until the action happens
mp_endmatch_votenextmap "0";                        // Whether or not players vote for the next map at the end of the match when the final scoreboard comes up
mp_endmatch_votenextleveltime "0";                  // If mp_endmatch_votenextmap is set, players have this much time to vote on the next map at match end.
mapgroup "mg_custom";                               // Specify a map group

mp_warmuptime_all_players_connected "0";            // Warmup time to use when all players have connected. 0 to sound_disable.
mp_warmuptime_match_cancelled "inf";                // Warmup time to use when the match will be cancelled (eg. due to a live VAC ban).
mp_warmup_offline_enabled "1";                      // Whether or not to do a warmup period at the start of an online match.
mp_warmup_online_enabled "1";                       // Whether or not to do a warmup period at the start of a match in an offline
mp_endwarmup_player_count "0";                      // Number of players required to be connected to end warmup early. 0 to require maximum players for mode.
mp_warmup_pausetimer "0";                           // Set to 1 to stay in warmup indefinitely. Set to 0 to resume the timer.
mp_warmuptime "inf";                                // How long the warmup period lasts. Changing this value resets warmup.
mp_warmup_start;                                    // End warmup immediately.
sv_warmup_to_freezetime_delay "0";                  // Delay between end of warmup and start of match.

mp_ignore_round_win_conditions "1";                 // Ignore conditions which would end the current round
mp_match_can_clinch "0";                            // Can a team clinch and end the match by being so far ahead that the other team has no way to catching up?
mp_maxrounds "2147483647";                          // max number of rounds to play before server changes maps
mp_roundtime_hostage "60";                          // How many minutes each round of Hostage Rescue takes. If 0 then use mp_roundtime instead.
mp_force_pick_time "inf";                           // The amount of time a player has on the team screen to make a selection before being auto-teamed (60 seconds is the max without broken UI)
mp_c4timer "40";                            // how long from when the C4 is armed until it blows
mp_roundtime_defuse "60";                           // How many minutes each round of Bomb Defuse takes. If 0 then use mp_roundtime instead.
mp_roundtime "60";                                  // How many minutes each round takes.
mp_timelimit "0";                                   // game time per map in minutes
sv_hide_roundtime_until_seconds "1";

mp_technical_timeout_duration_s "0";                // How many seconds is a full technical timeout?
mp_technical_timeout_per_team "0";                  // How many technical timeouts are there per team?
mp_match_end_restart "1";                           // At the end of the match, perform a restart instead of loading a new map
mp_round_restart_delay "0";                         // Number of seconds to delay before restarting a round after a win
mp_match_restart_delay "0";                         // Time (in seconds) until a match restarts.
mp_team_timeout_ot_max "0";                         // Max number of timeouts each team can have per OT after all OT timeouts got added.
mp_spawnprotectiontime "0";                         // Kick players who team-kill within this many seconds of a round restart.
mp_halftime_duration "0";                           // Target number of seconds that halftime lasts; shortened if team intros are active
mp_team_intro_time "0";                             // How many seconds for team intro
mp_halftime "0";                                    // Determines whether the match switches sides in a halftime event.
mp_freezetime "0";                                  // how many seconds to keep players frozen when the round starts

mp_disconnect_kills_players "0";                    // When a player disconnects, kill them first (triggering item drops, stats, etc.)
mp_disconnect_kills_bots "0";                       // When a bot disconnects, kill them first.  Requires mp_disconnect_kills_players.
weapon_max_before_cleanup "100";                    // If set to non-zero, will remove the oldest dropped weapon to maintain the specified number of dropped weapons in the world.
weapon_auto_cleanup_time "600";                     // If set to non-zero, weapons will delete themselves after the specified time (in seconds) if no players are near.

mp_maxmoney "1000000000";                           // 2^16-1 (maximum signed 16 bit integer) is the realistic max, otherwise it overflows (65537 means $1)
mp_startmoney "1000000000";                         // 2^16-1 (maximum signed 16 bit integer) is the realistic max, otherwise it overflows (65537 means $1)
mp_overtime_startmoney "1000000000";                // 2^16-1 (maximum signed 16 bit integer) is the realistic max, otherwise it overflows (65537 means $1)
cash_team_loser_bonus "1400";
cash_team_hostage_alive "0";
cash_player_get_killed "0";
cash_player_bomb_defused "300";
cash_player_bomb_planted "300";
cash_team_rescued_hostage "600";
cash_player_killed_hostage "-1000";
cash_player_damage_hostage "-30";
cash_player_respawn_amount "0";
cash_player_rescued_hostage "100";
cash_player_killed_teammate "-300";
cash_team_bonus_shorthanded "1000";
cash_player_killed_enemy_factor "1";
cash_team_terrorist_win_bomb "3500";
cash_team_hostage_interaction "600";
cash_team_win_by_defusing_bomb "3500";
cash_team_elimination_bomb_map "3250";
cash_team_win_by_hostage_rescue "2900";
cash_player_killed_enemy_default "300";
cash_player_interact_with_hostage "300";
cash_team_planted_bomb_but_defused "800";
cash_team_elimination_hostage_map_t "3000";
cash_team_elimination_hostage_map_ct "3000";
cash_team_win_by_time_running_out_bomb "3250";
cash_team_loser_bonus_consecutive_rounds "500";
cash_team_win_by_time_running_out_hostage "3250";
cash_team_winner_bonus_consecutive_rounds "0";

mp_weapons_allow_typecount "-1";                        // Determines how many purchases of each weapon type allowed per player per round (0 to disallow purchasing, -1 to have no limit).
mp_weapons_allow_pistols "-1";                          // Determines which team, if any, can purchase Pistols. -1 = any; 0 = non; 2 = Ts; 3 = CTs.
mp_weapons_allow_rifles "-1";                           // Determines which team, if any, can purchase Rifles. -1 = any; 0 = non; 2 = Ts; 3 = CTs.
mp_weapons_allow_heavy "-1";                            // Determines which team, if any, can purchase Heavy guns. -1 = any; 0 = non; 2 = Ts; 3 = CTs.
mp_weapons_allow_smgs "-1";                             // Determines which team, if any, can purchase SMGs. -1 = any; 0 = non; 2 = Ts; 3 = CTs.
mp_weapons_allow_zeus "-1";                             // Determines how many Zeus purchases a player can make per round (0 to disallow, -1 to have no limit).mp_buy_during_immunity "0";                 // When set, players can buy when immune, ignoring buytime. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.
mp_items_prohibited "";                                 // Set this convar to a comma-delimited list of definition indices of weapons that should be prohibited from use.
mp_buy_anywhere "1";                                    // When set, players can buy anywhere, not only in buyzones. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists.
mp_buytime "inf";                                       // How many seconds after round start players can buy items for.
sv_buy_status_override "0";                             // Override for buy status map info. 0 = everyone can buy, 1 = ct only, 2 = t only 3 = nobody

mp_ct_default_grenades "weapon_molotov weapon_flashbang";                             // The default grenades that the CTs will spawn with.	 To give multiple grenades, separate each weapon class with a space like this: 'weapon_molotov weapon_hegrenade'
mp_t_default_grenades  "weapon_molotov weapon_flashbang";                             // The default grenades that the Ts will spawn with.	To give multiple grenades, separate each weapon class with a space like this: 'weapon_molotov weapon_hegrenade'
mp_ct_default_melee "weapon_knife";        // The default melee weapon that the CTs will spawn with.	 Even if this is blank, a knife will be given.	To give a taser, it should look like this: 'weapon_knife weapon_taser'.	 Remember to set mp_weapons_allow_zeus to 1 if you want to give a taser!
mp_t_default_melee  "weapon_knife";        // The default melee weapon that the Ts will spawn with
mp_ct_default_primary "weapon_m4a1";                    // The default primary (rifle) weapon that the CTs will spawn with
mp_t_default_primary  "weapon_ak47";                    // The default primary (rifle) weapon that the Ts will spawn with
mp_taser_recharge_time "0";                             // Determines recharge time for taser. -1 = disabled.
mp_defuser_allocation "0";                              // How to allocate defusers to CTs at start or round: 0=none, 1=random, 2=everyone
mp_free_armor "0";                                      // Determines whether kevlar (1+) and/or helmet (2+) are given automatically.
sv_infinite_ammo "2";                                   // Player's active weapon will never run out of ammo
sv_autobuyammo "1";                                     // Enable automatic ammo purchase when inside buy zones during buy periods

ammo_9mm_max "2147483647";
ammo_57mm_max "2147483647";
ammo_50AE_max "2147483647";
ammo_45acp_max "2147483647";
ammo_556mm_max "2147483647";
ammo_762mm_max "2147483647";
ammo_357sig_max "2147483647";
ammo_338mag_max "2147483647";
ammo_buckshot_max "2147483647";
ammo_556mm_box_max "2147483647";
ammo_357sig_min_max "2147483647";
ammo_357sig_p250_max "2147483647";
ammo_556mm_small_max "2147483647";
ammo_357sig_small_max "2147483647";
ammo_grenade_limit_total "2147483647";
ammo_item_limit_healthshot "2147483647";
ammo_item_limit_adrenaline "2147483647";
ammo_grenade_limit_default "2147483647";
ammo_grenade_limit_bumpmine "2147483647";
ammo_grenade_limit_flashbang "2147483647";
ammo_grenade_limit_snowballs "2147483647";
ammo_grenade_limit_breachcharge "2147483647";
ammo_grenade_limit_tripwirefire "2147483647";

mp_death_drop_breachcharge "0";                         // Drop breachcharge on player death
mp_death_drop_healthshot "0";                           // Drop healthshot on player death
mp_c4_cannot_be_defused "1";                            // If set, the planted c4 cannot be defused.
mp_anyone_can_pickup_c4 "1";                            // If set, everyone can pick up the c4, not just Ts.
mp_drop_grenade_enable "1";                             // Allows players to drop grenades.
mp_death_drop_defuser "0";                              // Drop defuser on player death
mp_drop_knife_enable "1";                               // Allows players to drop knives.
mp_death_drop_taser "0";                                // Drop taser on player death
mp_death_drop_grenade "0";                              // Which grenade to drop on player death: 0=none, 1=best, 2=current or best, 3=all grenades
mp_give_player_c4 "0";                                  // Whether this map should spawn a c4 bomb for a player or not.
mp_death_drop_c4 "0";                                   // Whether c4 is droppable
mp_death_drop_gun "1";                                  // Which gun to drop on player death: 0=none, 1=best, 2=current or best (and whether or not guns are droppable)

sv_regeneration_force_on "0";                           // Cheat to test regenerative health systems
sv_health_approach_enabled "0";
sv_health_approach_speed "inf";
mp_dm_healthshot_killcount "1";                         // Grant healthshots in deathmatch after n kills
mp_respawn_on_death_ct "1";                             // When set to 1, counter-terrorists will respawn after dying.
mp_respawn_on_death_t "1";                              // When set to 1, terrorists will respawn after dying.
mp_respawnwavetime_ct "0";                              // Time between respawn waves for CTs.
mp_respawnwavetime_t "0";                               // Time between respawn waves for Terrorists.
healthshot_health "1000000000";
healthshot_healthboost_time "0";
healthshot_allow_use_at_full "0";
healthshot_healthboost_speed_multiplier "1";
healthshot_healthboost_damage_multiplier "1";

sv_enablebunnyhopping "1";                              // Allow player speed to exceed maximum running speed
sv_autobunnyhopping "0";                                // Players automatically re-jump while holding jump sound_button
mp_solid_teammates "1";                                 // How solid are teammates: 0 = transparent; 1 = fully solid; 2 = can stand on top of heads
                                                        // dump the text currently in the console to condumpXX.l


echoln "                                                                                                          "
echoln " +-------------------+    "
echoln " | warmup.cfg loaded |    "
echoln " +-------------------+    "
echoln "                                                                                                          "